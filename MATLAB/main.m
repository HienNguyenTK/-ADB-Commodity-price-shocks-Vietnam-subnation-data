%The program run_IRF.m estimates hx and PI in Z_t = hx*Z_{t-1} + PI*eps_{t} (constant omitted) where eps_{t}~(0,I).
%In SVAR(4) & nvar = 6, the first block of hx [i.e. matrix(6x24)] is what we actually care for impulse responses and variance decomposition. The rest combines a big
%identity matrix and zeros.
%The program run_IRF.m also computes othodogonalized impulse responses (IRFs) and cummulative IRFs of each domestic variables to a 10% increase in
%a global commodity price; and computes the cumulative variance shares of the domestic variables explained by a global commodity price shock. 
%The program run_bootstrap computes 68% confidence bands of IRFs and
%cumulative IRFs.
%Plotting IRFs, cumulative IRFs by run_plotIRF.m, run_plotcumIRF.m


clear all, clc


%% Define data: Country or Region
docountry = 0;
    %1 if country; 0 if region
if docountry == 1
    readCountry; %read country-level data
elseif docountry == 0
    readRegion; %read region-level data
end

ngshock = size(shocknames,1); 
    %total 11 global shocks examined. See `shocknames' for details.
nlags = 1 %lag length of SVAR 
    %change to nlags=1 when doregion==0 because of too short regional data
    %can also do nlags=1 when docountry==1)
lag = nlags-1; 
    %Data Z_t correspondingly used in VAR(p) is generated by using lag = p-1 & function lagg.m so that the LHS data contain 0-1-2-3 lagged series.
nvar = 6; 
    %no. of variables
Tirf = 21;
    %length of impulse responses;

%To save variance share after estimation
v_share = zeros(ngshock,nvar,nreg); 
    %Cholesky variance decomposition implied by SVAR to global price shock

%To save Eigen value after estimation
EIG = zeros(ngshock,nreg); 
    %Check if maximum of Eigenvalues <= 1

%To save IRFs & 68% CIs
sIR = zeros(Tirf,nvar*nlags,nreg,ngshock);
sIR1 = zeros(Tirf,nvar*nlags,nreg,ngshock);
sIR2 = zeros(Tirf,nvar*nlags,nreg,ngshock);
%To save cumulative IRFs & 68% CIs
scIR = zeros(Tirf,nvar*nlags,nreg,ngshock);
scIR1 = zeros(Tirf,nvar*nlags,nreg,ngshock);
scIR2 = zeros(Tirf,nvar*nlags,nreg,ngshock);


%% Running & Saving SVAR estimation and bootstrap
for k = 1:nreg %nreg: total regions, defined in readCountry.m/readRegion.m
    k
    for ngcom = 1:ngshock %define which global shock
        run_IRF; %run SVAR estimation for IRFs
        run_bootstrap; %run bootstrap for 68%CIs
    end
end

if docountry == 1
    save country.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock
elseif docountry == 0
    save region.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock
end


%% Plotting IRFs, cumulative IRFs, 68%CIs
docountry = 1;
    %1 if use country data; 0 if use region data
if docountry == 1
    load country.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock
        %country.mat generated in main.m when docountry=1 & nlags=4
elseif docountry == 0
    load region.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock
        %region.mat generated in main.m when docountry=0 & nlags=1
end

for k = 1:nreg
    k
    run_plotIRF; %plot IRFs by region/shock
    run_plotcumIRF; %plot cumulative IRFs by region/shock
end


%% Saving IRFs, cIRFs, 68%CIs
docountry = 1;
    %1 if use country data; 0 if use region data
if docountry == 1
    load country.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock 
        %country.mat generated in main.m when docountry=1 & nlags=4
elseif docountry == 0
    load region.mat v_share sIR sIR1 sIR2 scIR scIR1 scIR2 Tirf EIG regionnames shocknames nvar nlags nreg ngshock 
        %region.mat generated in main.m when docountry=0 & nlags=1
end

%to save IRFs for exporting
IRF = zeros(ngshock,nvar,nreg);
IRF1 = zeros(ngshock,nvar,nreg);
IRF2 = zeros(ngshock,nvar,nreg);
%to save 1-year cumulative IRFs for exporting
cIRF = zeros(ngshock,nvar,nreg);
cIRF1 = zeros(ngshock,nvar,nreg);
cIRF2 = zeros(ngshock,nvar,nreg);

for k = 1:nreg
    for ngcom = 1:ngshock
        IRF(ngcom,:,k) = round(10*sIR(1,1:nvar,k,ngcom),2);
        IRF1(ngcom,:,k) = round(10*sIR1(1,1:nvar,k,ngcom),2);
        IRF2(ngcom,:,k) = round(10*sIR2(1,1:nvar,k,ngcom),2);
        
        cIRF(ngcom,:,k) = round(10*scIR(5,1:nvar,k,ngcom),2); %cumulative one-year
        cIRF1(ngcom,:,k) = round(10*scIR1(5,1:nvar,k,ngcom),2);
        cIRF2(ngcom,:,k) = round(10*scIR2(5,1:nvar,k,ngcom),2);
    end
end

%this will not change upon 'docountry=...' at the beginning
if docountry == 1
    save countryIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock 
elseif docountry == 0
    save regionIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock 
end


%% Tables of IRFs, cIRFs, and significance
docountry == 1; 
    %1 if country; 0 if region
if docountry == 1
    load countryIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
elseif docountry == 0
    load regionIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
end

tablecell = cell(ngshock,nvar-1);
c1 = cell(ngshock,nvar-1); %IRFs/cIRFs
c2 = cell(ngshock,nvar-1); %significance

%Table of IRFs
for k = 1:nreg %nreg: total regions, defined in readCountry.m/readRegion.m
    regionnames{k}
    for ngcom = 1:ngshock %define which global shock
        for jj = 1:nvar-1
            c1(ngcom,jj) = cellstr(string(IRF(ngcom,jj+1,k)));
            if (IRF(ngcom,jj+1,k)>0 && IRF1(ngcom,jj+1,k)>0) | (IRF(ngcom,jj+1,k)<0 && IRF2(ngcom,jj+1,k)<0)
                c2(ngcom,jj) = {'*'};
            else
                c2(ngcom,jj) = {' '};
            end
        end
    end
    tablecell = cellfun(@(x,y) [x '' y],c1,c2,'UniformOutput',0);
end
table = cell2table(tablecell,...
    'VariableNames',{'tot' 'gdppc' 'inf' 'ir' 'rer'},... %change 'gdppc' to 'unemp' for regional plot
    'RowNames',{'Energy price' 'Agriculture price' 'Beverage price' 'Food price' 'Vegetable oil and meal price' 'Cereal price' 'Other food price' 'Raw material price' 'Timber price' 'Other raw material price' 'Metal price'})

% Table of cumulative one-year IRFs
for k = 1:nreg %nreg: total regions, defined in readCountry.m/readRegion.m
    regionnames{k}
    for ngcom = 1:ngshock %define which global shock
        for jj = 1:nvar-1
            c1(ngcom,jj) = cellstr(string(cIRF(ngcom,jj+1,k)));
            if (cIRF(ngcom,jj+1,k)>0 && cIRF1(ngcom,jj+1,k)>0) | (cIRF(ngcom,jj+1,k)<0 && cIRF2(ngcom,jj+1,k)<0)
                c2(ngcom,jj) = {'*'};
            else
                c2(ngcom,jj) = {' '};
            end
        end
    end
    tablecell = cellfun(@(x,y) [x '' y],c1,c2,'UniformOutput',0);
end
table = cell2table(tablecell,...
    'VariableNames',{'tot' 'gdppc' 'inf' 'ir' 'rer'},... %change 'gdppc' to 'unemp' for regional plot
    'RowNames',{'Energy price' 'Agriculture price' 'Beverage price' 'Food price' 'Vegetable oil and meal price' 'Cereal price' 'Other food price' 'Raw material price' 'Timber price' 'Other raw material price' 'Metal price'})


%% (Optional) Exporting IRFs, cIRFs, 68%CIs to excel to compute significance
docountry = 1;
    %1 if use country data; 0 if use region data
if docountry == 1
    load countryIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
        %country.mat generated in main.m when docountry=1 & nlags=4
elseif docountry == 0
    load regionIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
        %region.mat generated in main.m when docountry=0 & nlags=1
end

%to export double array to excel if wish
for k = 1:nreg
sheet = k;
    %xlswrite('IRF.xlsx',IRF(:,:,k),sheet); %either use xlswrite (not recommended) or use writematrix:
    writematrix(IRF(:,:,k),'IRF.xls','Sheet',k);
    writematrix(IRF1(:,:,k),'IRF1.xls','Sheet',k);
    writematrix(IRF2(:,:,k),'IRF2.xls','Sheet',k);
    
    writematrix(cIRF(:,:,k),'cIRF.xls','Sheet',k);
    writematrix(cIRF1(:,:,k),'cIRF1.xls','Sheet',k);
    writematrix(cIRF2(:,:,k),'cIRF2.xls','Sheet',k);
end


%% Tables of variance
docountry == 1;
    %1 if country; 0 if region
if docountry == 1
    load countryIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
elseif docountry == 0
    load regionIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
end
for k = 1:nreg
regionnames{k} 
table = array2table(round(v_share(:,2:6,k),2),...
    'VariableNames',{'tot' 'gdppc' 'inf' 'ir' 'rer'},...%change 'gdppc' to 'unemp' for regional plot
    'RowNames',{'Energy price' 'Agriculture price' 'Beverage price' 'Food price' 'Vegetable oil and meal price' 'Cereal price' 'Other food price' 'Raw material price' 'Timber price' 'Other raw material price' 'Metal price'})
end
%% (Optional) Export variance share to excel
docountry = 0;
    %1 if use country data; 0 if use region data
if docountry == 1
    load countryIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
        %country.mat generated in main.m when docountry=1 & nlags=4
elseif docountry == 0
    load regionIRF.mat v_share IRF IRF1 IRF2 cIRF cIRF1 cIRF2 nvar nreg regionnames ngshock
        %region.mat generated in main.m when docountry=0 & nlags=1
end

for k = 1:nreg %nreg defined in readData.m
    sheet = k;
    writematrix(v_share(:,:,k),'v_share.xls','Sheet',k);
end
%EndOfCode